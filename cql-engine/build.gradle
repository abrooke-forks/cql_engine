// Most build configuration comes from the cql-all parent build!

dependencies {
    compile group: 'joda-time', name: 'joda-time', version: '2.9.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'org.fhir', name: 'ucum', version: '1.0.1'
}

// This is used to regenerate the base evaluator classes
generateSources {
    inputs.dir "${projectDir}/../cql-lm/schema"

    doLast {
        ant.xjc(destdir: xjc.destDir, package: 'org.cqframework.cql.elm.execution', schema: "${projectDir}/../cql-lm/schema/elm/library.xsd") {
            arg(line: "${xjc.args} -npa -XautoInheritance -XautoInheritance-xmlTypesExtend=org.opencds.cqf.cql.elm.execution.Executable")
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
            'Implementation-Version': version,
            'Main-Class': 'org.opencds.cqf.cql.execution.CqlRunnerApp'
    }
    baseName = project.name + '-all'
    from { configurations.testCompile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.test.output+sourceSets.test.allSource
    with jar
}